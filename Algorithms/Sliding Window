Algorithms:
1. Sliding Window: Define a window of a specific size or range and process the elements from the array.
 Types: 
  i. Fixed Size : 
      1) Get the window size. 
      2) Process the elements into the window until the specified size is reached.
      3) For the next subsequent operations, keep sliding the window by 1. 
  ii. Variable Size :
      1) Move right pointer until condition is true.
      2) If false move left pointer by 1
      3) continue step 1 and 2, until the end of array.
 Use Cases: 
    1. To find the maximum sum of all subarrays of size K
    2. finding the longest substring with unique characters
    3. solving problems that require a fixed-size window to process elements efficiently
 How to identify?
  1. Finding minimum/maximum subarray or substring with some condition
  2. Size is given in few problems
  3. These problems can be solved in O(N2) TC using nested loops but using sliding window, they can be solved in O(N).
  4. TC should be O(N) or O(NlogN)

Caterpillar Method:
 * At every step, either right or left pointer should be moved.
